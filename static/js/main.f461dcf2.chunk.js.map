{"version":3,"sources":["App.tsx","index.tsx"],"names":["SortType","goodsFromServer","getReorderedGoods","goods","sortType","isReversed","visibleGoods","ALPABET","sort","g1","g2","localeCompare","LENGTH","length","reverse","console","log","App","state","NONE","sortByAlphabet","setState","sortByLength","handleReverse","handleReset","this","className","type","onClick","map","good","React","Component","ReactDOM","render","document","getElementById"],"mappings":"iKAiBKA,E,+FAbQC,EAAkB,CAC7B,YACA,SACA,OACA,YACA,QACA,QACA,OACA,QACA,MACA,UAcK,SAASC,EACdC,EADK,GAGJ,IADCC,EACF,EADEA,SAAUC,EACZ,EADYA,WAERC,EAAY,YAAOH,GAEvB,OAAQC,GACN,KAAKJ,EAASO,QACZD,EAAeA,EAAaE,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGE,cAAcD,MAC9D,MAEF,KAAKV,EAASY,OACZN,EAAeA,EAAaE,MAAK,SAACC,EAAIC,GAAL,OAAYD,EAAGI,OAASH,EAAGG,UAOhE,OAAIR,EACKC,EAAaQ,WAItBC,QAAQC,IAAIZ,EAAUC,GAEfC,I,SArCJN,O,eAAAA,I,qBAAAA,I,oBAAAA,M,KA6CE,IAAMiB,EAAb,4MACEC,MAAQ,CACNb,YAAY,EACZD,SAAUJ,EAASmB,MAHvB,EAMEC,eAAiB,WACf,EAAKC,SAAS,CAAEjB,SAAUJ,EAASO,WAPvC,EAUEe,aAAe,WACb,EAAKD,SAAS,CAAEjB,SAAUJ,EAASY,UAXvC,EAcEW,cAAgB,WACd,EAAKF,UAAS,SAACH,GACb,OAAO,2BACFA,GADL,IAEEb,YAAaa,EAAMb,iBAlB3B,EAuBEmB,YAAc,WACZ,EAAKH,SAAU,CACbhB,YAAY,EACZD,SAAUJ,EAASmB,QA1BzB,4CA8BE,WACE,MAAiCM,KAAKP,MAA9Bd,EAAR,EAAQA,SAAUC,EAAlB,EAAkBA,WAElB,OACE,sBAAKqB,UAAU,kBAAf,UACE,sBAAKA,UAAU,UAAf,UACE,wBACEC,KAAK,SACLD,UAAS,yBAAoBtB,IAAaJ,EAASO,SAAW,YAC9DqB,QAASH,KAAKL,eAHhB,iCAQA,wBACEO,KAAK,SACLD,UAAS,4BAAuBtB,IAAaJ,EAASY,QAAU,YAChEgB,QAASH,KAAKH,aAHhB,4BAQA,wBACEK,KAAK,SACLD,UAAS,6BAAwBrB,GAAc,YAC/CuB,QAASH,KAAKF,cAHhB,sBAQElB,GAAcD,IAAaJ,EAASmB,OACpC,wBACEQ,KAAK,SACLD,UAAU,4BACVE,QAASH,KAAKD,YAHhB,sBAUJ,6BACE,6BACGtB,EAAkBD,EAAiBwB,KAAKP,OAAOW,KAAI,SAAAC,GAAI,OACtD,oBAAe,UAAQ,OAAvB,SACGA,GADMA,iBA1EvB,GAAyBC,IAAMC,WC3D/BC,IAASC,OACP,cAAC,EAAD,IACAC,SAASC,eAAe,W","file":"static/js/main.f461dcf2.chunk.js","sourcesContent":["import React from 'react';\nimport 'bulma/css/bulma.css';\nimport './App.scss';\n\nexport const goodsFromServer = [\n  'Dumplings',\n  'Carrot',\n  'Eggs',\n  'Ice cream',\n  'Apple',\n  'Bread',\n  'Fish',\n  'Honey',\n  'Jam',\n  'Garlic',\n];\n\nenum SortType {\n  NONE,\n  ALPABET,\n  LENGTH,\n}\n\ntype ReorderOptions = {\n  sortType: SortType,\n  isReversed: boolean,\n};\n\nexport function getReorderedGoods(\n  goods: string[],\n  { sortType, isReversed }: ReorderOptions,\n) {\n  let visibleGoods = [...goods];\n\n  switch (sortType) {\n    case SortType.ALPABET:\n      visibleGoods = visibleGoods.sort((g1, g2) => g1.localeCompare(g2));\n      break;\n\n    case SortType.LENGTH:\n      visibleGoods = visibleGoods.sort((g1, g2) => g1.length - g2.length);\n      break;\n\n    default:\n      break;\n  }\n\n  if (isReversed) {\n    return visibleGoods.reverse();\n  }\n\n  // eslint-disable-next-line no-console\n  console.log(sortType, isReversed);\n\n  return visibleGoods;\n}\n\ntype State = {\n  isReversed: boolean,\n  sortType: SortType,\n};\n\nexport class App extends React.Component<{}, State> {\n  state = {\n    isReversed: false,\n    sortType: SortType.NONE,\n  };\n\n  sortByAlphabet = () => {\n    this.setState({ sortType: SortType.ALPABET });\n  };\n\n  sortByLength = () => {\n    this.setState({ sortType: SortType.LENGTH });\n  };\n\n  handleReverse = () => {\n    this.setState((state) => {\n      return {\n        ...state,\n        isReversed: !state.isReversed,\n      };\n    });\n  };\n\n  handleReset = () => {\n    this.setState(({\n      isReversed: false,\n      sortType: SortType.NONE,\n    }));\n  };\n\n  render() {\n    const { sortType, isReversed } = this.state;\n\n    return (\n      <div className=\"section content\">\n        <div className=\"buttons\">\n          <button\n            type=\"button\"\n            className={`button is-info ${sortType !== SortType.ALPABET && 'is-light'}`}\n            onClick={this.sortByAlphabet}\n          >\n            Sort alphabetically\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-success ${sortType !== SortType.LENGTH && 'is-light'}`}\n            onClick={this.sortByLength}\n          >\n            Sort by length\n          </button>\n\n          <button\n            type=\"button\"\n            className={`button is-warning ${!isReversed && 'is-light'}`}\n            onClick={this.handleReverse}\n          >\n            Reverse\n          </button>\n\n          {(isReversed || sortType !== SortType.NONE) && (\n            <button\n              type=\"button\"\n              className=\"button is-danger is-light\"\n              onClick={this.handleReset}\n            >\n              Reset\n            </button>\n          )}\n        </div>\n\n        <ul>\n          <ul>\n            {getReorderedGoods(goodsFromServer, this.state).map(good => (\n              <li key={good} data-cy=\"Good\">\n                {good}\n              </li>\n            ))}\n          </ul>\n        </ul>\n      </div>\n    );\n  }\n}\n","import ReactDOM from 'react-dom';\nimport { App } from './App';\n\nReactDOM.render(\n  <App />,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}